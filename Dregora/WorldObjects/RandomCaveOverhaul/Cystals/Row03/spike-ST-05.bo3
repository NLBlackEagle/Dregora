#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 object                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This is the config file of a custom object.
# If you add this object correctly to your BiomeConfigs, it will spawn in the world.

# This is the creator of this BO3 object
Author: BO3 BulkEdit (by LanToaster)

# A short description of this BO3 object
Description: Bo3 spikes created by NLBlackEagle

# The BO3 version, don't change this! It can be used by external applications to do a version check.
Version: 3

# The settings mode, WriteAll, WriteWithoutComments or WriteDisable. See WorldConfig.
SettingsMode: WriteDisable


#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Main settings                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This needs to be set to true to spawn the object in the Tree and Sapling resources.
Tree: false

# The frequency of the BO3 from 1 to 200. Tries this many times to spawn this BO3 when using the CustomObject(...) resource.

Frequency: 100

# The rarity of the BO3 from 0 to 100. Each spawn attempt has rarity% chance to succeed when using the CustomObject(...) resource.

Rarity: 100

# If you set this to true, the BO3 will be placed with a random rotation.
RotateRandomly: true

# The spawn height of the BO3 - randomY, highestBlock or highestSolidBlock.
SpawnHeight: randomY

# The height limits for the BO3.
MinHeight: 0

MaxHeight: 256

# Objects can have other objects attacthed to it: branches. Branches can also
# have branches attached to it, which can also have branches, etc. This is the
# maximum branch depth for this objects.
MaxBranchDepth: 10

# When spawned with the UseWorld keyword, this BO3 should NOT spawn in the following biomes.
# If you writer.write the BO3 name directly in the BiomeConfigs, this will be ignored.
ExcludedBiomes: All


#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Source block settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The block(s) the BO3 should spawn in.
SourceBlocks: AIR

# The maximum percentage of the BO3 that can be outside the SourceBlock.
# The BO3 won't be placed on a location with more blocks outside the SourceBlock than this percentage.
MaxPercentageOutsideSourceBlock: 100

# What to do when a block is about to be placed outside the SourceBlock? (dontPlace, placeAnyway)
OutsideSourceBlock: placeAnyway


#######################################################################
# +-----------------------------------------------------------------+ #
# |                              Blocks                             | #
# +-----------------------------------------------------------------+ #
#######################################################################

# All the blocks used in the BO3 are listed here. Possible blocks:
# Block(x,y,z,id[.data][,nbtfile.nbt)
# RandomBlock(x,y,z,id[:data][,nbtfile.nbt],chance[,id[:data][,nbtfile.nbt],chance[,...]])
# So RandomBlock(0,0,0,CHEST,chest.nbt,50,CHEST,anotherchest.nbt,100) will spawn a chest at
# the BO3 origin, and give it a 50% chance to have the contents of chest.nbt, or, if that
# fails, a 100% percent chance to have the contents of anotherchest.nbt.
Block(1,-1,0,STAINED_GLASS:15)
Block(2,-1,0,STAINED_GLASS:15)
Block(3,-1,0,STAINED_GLASS:15)
Block(0,-1,1,STAINED_GLASS:15)
Block(1,-1,1,STAINED_GLASS:15)
Block(2,-1,1,STAINED_GLASS:15)
Block(3,-1,1,STAINED_GLASS:15)
Block(4,-1,1,STAINED_GLASS:15)
Block(0,-1,2,STAINED_GLASS:15)
Block(1,-1,2,STAINED_GLASS:15)
Block(2,-1,2,SEA_LANTERN:0)
Block(3,-1,2,SEA_LANTERN:0)
Block(4,-1,2,STAINED_GLASS:15)
Block(5,-1,2,STAINED_GLASS:15)
Block(0,-1,3,STAINED_GLASS:15)
Block(1,-1,3,STAINED_GLASS:15)
Block(2,-1,3,SEA_LANTERN:0)
Block(3,-1,3,SEA_LANTERN:0)
Block(4,-1,3,STAINED_GLASS:15)
Block(5,-1,3,STAINED_GLASS:15)
Block(1,-1,4,STAINED_GLASS:15)
Block(2,-1,4,STAINED_GLASS:15)
Block(3,-1,4,STAINED_GLASS:15)
Block(4,-1,4,STAINED_GLASS:15)
Block(2,-1,5,STAINED_GLASS:15)
Block(3,-1,5,STAINED_GLASS:15)
Block(2,0,-1,STAINED_GLASS:15)
Block(1,0,0,STAINED_GLASS:15)
Block(2,0,0,STAINED_GLASS:15)
Block(3,0,0,STAINED_GLASS:15)
Block(0,0,1,STAINED_GLASS:15)
Block(1,0,1,STAINED_GLASS:15)
Block(2,0,1,SEA_LANTERN:0)
Block(3,0,1,STAINED_GLASS:15)
Block(4,0,1,STAINED_GLASS:15)
Block(-1,0,2,STAINED_GLASS:15)
Block(0,0,2,STAINED_GLASS:15)
Block(1,0,2,SEA_LANTERN:0)
Block(2,0,2,SEA_LANTERN:0)
Block(3,0,2,SEA_LANTERN:0)
Block(4,0,2,STAINED_GLASS:15)
Block(5,0,2,STAINED_GLASS:15)
Block(0,0,3,STAINED_GLASS:15)
Block(1,0,3,STAINED_GLASS:15)
Block(2,0,3,SEA_LANTERN:0)
Block(3,0,3,STAINED_GLASS:15)
Block(4,0,3,STAINED_GLASS:15)
Block(1,0,4,STAINED_GLASS:15)
Block(2,0,4,STAINED_GLASS:15)
Block(3,0,4,STAINED_GLASS:15)
Block(2,0,5,STAINED_GLASS:15)
Block(1,1,-1,STAINED_GLASS:15)
Block(2,1,-1,STAINED_GLASS:15)
Block(0,1,0,STAINED_GLASS:15)
Block(1,1,0,STAINED_GLASS:15)
Block(2,1,0,STAINED_GLASS:15)
Block(3,1,0,STAINED_GLASS:15)
Block(-1,1,1,STAINED_GLASS:15)
Block(0,1,1,STAINED_GLASS:15)
Block(1,1,1,SEA_LANTERN:0)
Block(2,1,1,SEA_LANTERN:0)
Block(3,1,1,STAINED_GLASS:11)
Block(4,1,1,STAINED_GLASS:11)
Block(-1,1,2,STAINED_GLASS:15)
Block(0,1,2,STAINED_GLASS:15)
Block(1,1,2,SEA_LANTERN:0)
Block(2,1,2,SEA_LANTERN:0)
Block(3,1,2,STAINED_GLASS:3)
Block(4,1,2,STAINED_GLASS:11)
Block(0,1,3,STAINED_GLASS:15)
Block(1,1,3,STAINED_GLASS:3)
Block(2,1,3,STAINED_GLASS:15)
Block(3,1,3,STAINED_GLASS:3)
Block(1,1,4,STAINED_GLASS:3)
Block(2,1,4,STAINED_GLASS:3)
Block(1,2,-2,STAINED_GLASS:15)
Block(0,2,-1,STAINED_GLASS:15)
Block(1,2,-1,STAINED_GLASS:15)
Block(2,2,-1,STAINED_GLASS:15)
Block(-1,2,0,STAINED_GLASS:15)
Block(0,2,0,STAINED_GLASS:15)
Block(1,2,0,SEA_LANTERN:0)
Block(2,2,0,STAINED_GLASS:15)
Block(3,2,0,STAINED_GLASS:11)
Block(-2,2,1,STAINED_GLASS:15)
Block(-1,2,1,STAINED_GLASS:15)
Block(0,2,1,SEA_LANTERN:0)
Block(1,2,1,SEA_LANTERN:0)
Block(2,2,1,SEA_LANTERN:0)
Block(3,2,1,STAINED_GLASS:11)
Block(4,2,1,STAINED_GLASS:11)
Block(-1,2,2,STAINED_GLASS:15)
Block(0,2,2,STAINED_GLASS:15)
Block(1,2,2,SEA_LANTERN:0)
Block(2,2,2,STAINED_GLASS:3)
Block(3,2,2,STAINED_GLASS:11)
Block(0,2,3,STAINED_GLASS:3)
Block(1,2,3,STAINED_GLASS:3)
Block(2,2,3,STAINED_GLASS:3)
Block(1,2,4,STAINED_GLASS:3)
Block(0,3,-2,STAINED_GLASS:15)
Block(1,3,-2,STAINED_GLASS:15)
Block(-1,3,-1,STAINED_GLASS:15)
Block(0,3,-1,STAINED_GLASS:15)
Block(1,3,-1,STAINED_GLASS:15)
Block(2,3,-1,STAINED_GLASS:15)
Block(-2,3,0,STAINED_GLASS:11)
Block(-1,3,0,STAINED_GLASS:15)
Block(0,3,0,SEA_LANTERN:0)
Block(1,3,0,SEA_LANTERN:0)
Block(2,3,0,STAINED_GLASS:11)
Block(3,3,0,STAINED_GLASS:11)
Block(-2,3,1,STAINED_GLASS:15)
Block(-1,3,1,STAINED_GLASS:15)
Block(0,3,1,SEA_LANTERN:0)
Block(1,3,1,SEA_LANTERN:0)
Block(2,3,1,STAINED_GLASS:3)
Block(3,3,1,STAINED_GLASS:11)
Block(-1,3,2,STAINED_GLASS:15)
Block(0,3,2,STAINED_GLASS:15)
Block(1,3,2,STAINED_GLASS:15)
Block(2,3,2,STAINED_GLASS:3)
Block(0,3,3,STAINED_GLASS:15)
Block(1,3,3,STAINED_GLASS:3)
Block(0,4,-3,STAINED_GLASS:3)
Block(-1,4,-2,STAINED_GLASS:15)
Block(0,4,-2,STAINED_GLASS:3)
Block(1,4,-2,STAINED_GLASS:15)
Block(-2,4,-1,STAINED_GLASS:11)
Block(-1,4,-1,STAINED_GLASS:15)
Block(0,4,-1,SEA_LANTERN:0)
Block(1,4,-1,STAINED_GLASS:15)
Block(2,4,-1,STAINED_GLASS:11)
Block(-3,4,0,STAINED_GLASS:11)
Block(-2,4,0,STAINED_GLASS:11)
Block(-1,4,0,SEA_LANTERN:0)
Block(0,4,0,SEA_LANTERN:0)
Block(1,4,0,SEA_LANTERN:0)
Block(2,4,0,STAINED_GLASS:11)
Block(3,4,0,STAINED_GLASS:11)
Block(-2,4,1,STAINED_GLASS:11)
Block(-1,4,1,STAINED_GLASS:15)
Block(0,4,1,SEA_LANTERN:0)
Block(1,4,1,STAINED_GLASS:3)
Block(2,4,1,STAINED_GLASS:11)
Block(-1,4,2,STAINED_GLASS:15)
Block(0,4,2,STAINED_GLASS:15)
Block(1,4,2,STAINED_GLASS:3)
Block(0,4,3,STAINED_GLASS:15)
Block(-1,5,-3,STAINED_GLASS:3)
Block(0,5,-3,STAINED_GLASS:3)
Block(-2,5,-2,STAINED_GLASS:15)
Block(-1,5,-2,STAINED_GLASS:3)
Block(0,5,-2,STAINED_GLASS:3)
Block(1,5,-2,STAINED_GLASS:3)
Block(-3,5,-1,STAINED_GLASS:11)
Block(-2,5,-1,STAINED_GLASS:15)
Block(-1,5,-1,SEA_LANTERN:0)
Block(0,5,-1,SEA_LANTERN:0)
Block(1,5,-1,STAINED_GLASS:11)
Block(2,5,-1,STAINED_GLASS:11)
Block(-3,5,0,STAINED_GLASS:11)
Block(-2,5,0,STAINED_GLASS:11)
Block(-1,5,0,SEA_LANTERN:0)
Block(0,5,0,SEA_LANTERN:0)
Block(1,5,0,STAINED_GLASS:15)
Block(2,5,0,STAINED_GLASS:11)
Block(-2,5,1,STAINED_GLASS:15)
Block(-1,5,1,STAINED_GLASS:3)
Block(0,5,1,STAINED_GLASS:15)
Block(1,5,1,STAINED_GLASS:3)
Block(-1,5,2,STAINED_GLASS:3)
Block(0,5,2,STAINED_GLASS:3)
Block(-1,6,-4,STAINED_GLASS:15)
Block(-2,6,-3,STAINED_GLASS:15)
Block(-1,6,-3,STAINED_GLASS:3)
Block(0,6,-3,STAINED_GLASS:3)
Block(-3,6,-2,STAINED_GLASS:11)
Block(-2,6,-2,STAINED_GLASS:15)
Block(-1,6,-2,SEA_LANTERN:0)
Block(0,6,-2,STAINED_GLASS:3)
Block(1,6,-2,STAINED_GLASS:11)
Block(-4,6,-1,STAINED_GLASS:11)
Block(-3,6,-1,STAINED_GLASS:11)
Block(-2,6,-1,SEA_LANTERN:0)
Block(-1,6,-1,SEA_LANTERN:0)
Block(0,6,-1,SEA_LANTERN:0)
Block(1,6,-1,STAINED_GLASS:11)
Block(2,6,-1,STAINED_GLASS:11)
Block(-3,6,0,STAINED_GLASS:11)
Block(-2,6,0,STAINED_GLASS:15)
Block(-1,6,0,SEA_LANTERN:0)
Block(0,6,0,STAINED_GLASS:15)
Block(1,6,0,STAINED_GLASS:11)
Block(-2,6,1,STAINED_GLASS:3)
Block(-1,6,1,STAINED_GLASS:3)
Block(0,6,1,STAINED_GLASS:3)
Block(-1,6,2,STAINED_GLASS:3)
Block(-2,7,-4,STAINED_GLASS:15)
Block(-1,7,-4,STAINED_GLASS:15)
Block(-3,7,-3,STAINED_GLASS:11)
Block(-2,7,-3,STAINED_GLASS:15)
Block(-1,7,-3,STAINED_GLASS:15)
Block(0,7,-3,STAINED_GLASS:15)
Block(-4,7,-2,STAINED_GLASS:11)
Block(-3,7,-2,STAINED_GLASS:11)
Block(-2,7,-2,SEA_LANTERN:0)
Block(-1,7,-2,SEA_LANTERN:0)
Block(0,7,-2,STAINED_GLASS:11)
Block(1,7,-2,STAINED_GLASS:15)
Block(-4,7,-1,STAINED_GLASS:11)
Block(-3,7,-1,STAINED_GLASS:11)
Block(-2,7,-1,SEA_LANTERN:0)
Block(-1,7,-1,SEA_LANTERN:0)
Block(0,7,-1,STAINED_GLASS:11)
Block(1,7,-1,STAINED_GLASS:11)
Block(-3,7,0,STAINED_GLASS:15)
Block(-2,7,0,STAINED_GLASS:3)
Block(-1,7,0,STAINED_GLASS:3)
Block(0,7,0,STAINED_GLASS:11)
Block(-2,7,1,STAINED_GLASS:3)
Block(-1,7,1,STAINED_GLASS:3)
Block(-2,8,-5,STAINED_GLASS:15)
Block(-3,8,-4,STAINED_GLASS:15)
Block(-2,8,-4,STAINED_GLASS:3)
Block(-1,8,-4,STAINED_GLASS:3)
Block(-4,8,-3,STAINED_GLASS:11)
Block(-3,8,-3,STAINED_GLASS:15)
Block(-2,8,-3,SEA_LANTERN:0)
Block(-1,8,-3,STAINED_GLASS:3)
Block(0,8,-3,STAINED_GLASS:15)
Block(-5,8,-2,STAINED_GLASS:11)
Block(-4,8,-2,STAINED_GLASS:11)
Block(-3,8,-2,SEA_LANTERN:0)
Block(-2,8,-2,SEA_LANTERN:0)
Block(-1,8,-2,SEA_LANTERN:0)
Block(0,8,-2,STAINED_GLASS:11)
Block(1,8,-2,STAINED_GLASS:11)
Block(-4,8,-1,STAINED_GLASS:11)
Block(-3,8,-1,STAINED_GLASS:15)
Block(-2,8,-1,SEA_LANTERN:0)
Block(-1,8,-1,STAINED_GLASS:11)
Block(0,8,-1,STAINED_GLASS:11)
Block(-3,8,0,STAINED_GLASS:15)
Block(-2,8,0,STAINED_GLASS:15)
Block(-1,8,0,STAINED_GLASS:11)
Block(-2,8,1,STAINED_GLASS:3)
Block(-3,9,-5,STAINED_GLASS:15)
Block(-2,9,-5,STAINED_GLASS:3)
Block(-4,9,-4,STAINED_GLASS:15)
Block(-3,9,-4,STAINED_GLASS:15)
Block(-2,9,-4,STAINED_GLASS:3)
Block(-1,9,-4,STAINED_GLASS:3)
Block(-5,9,-3,STAINED_GLASS:11)
Block(-4,9,-3,STAINED_GLASS:11)
Block(-3,9,-3,SEA_LANTERN:0)
Block(-2,9,-3,SEA_LANTERN:0)
Block(-1,9,-3,STAINED_GLASS:3)
Block(0,9,-3,STAINED_GLASS:3)
Block(-5,9,-2,STAINED_GLASS:11)
Block(-4,9,-2,STAINED_GLASS:15)
Block(-3,9,-2,SEA_LANTERN:0)
Block(-2,9,-2,SEA_LANTERN:0)
Block(-1,9,-2,STAINED_GLASS:15)
Block(0,9,-2,STAINED_GLASS:11)
Block(-4,9,-1,STAINED_GLASS:15)
Block(-3,9,-1,STAINED_GLASS:11)
Block(-2,9,-1,STAINED_GLASS:11)
Block(-1,9,-1,STAINED_GLASS:11)
Block(-3,9,0,STAINED_GLASS:15)
Block(-2,9,0,STAINED_GLASS:11)
Block(-3,10,-6,STAINED_GLASS:15)
Block(-4,10,-5,STAINED_GLASS:15)
Block(-3,10,-5,STAINED_GLASS:3)
Block(-2,10,-5,STAINED_GLASS:3)
Block(-5,10,-4,STAINED_GLASS:11)
Block(-4,10,-4,STAINED_GLASS:11)
Block(-3,10,-4,SEA_LANTERN:0)
Block(-2,10,-4,STAINED_GLASS:3)
Block(-1,10,-4,STAINED_GLASS:3)
Block(-6,10,-3,STAINED_GLASS:11)
Block(-5,10,-3,STAINED_GLASS:11)
Block(-4,10,-3,SEA_LANTERN:0)
Block(-3,10,-3,SEA_LANTERN:0)
Block(-2,10,-3,SEA_LANTERN:0)
Block(-1,10,-3,STAINED_GLASS:3)
Block(0,10,-3,STAINED_GLASS:15)
Block(-5,10,-2,STAINED_GLASS:11)
Block(-4,10,-2,STAINED_GLASS:11)
Block(-3,10,-2,SEA_LANTERN:0)
Block(-2,10,-2,STAINED_GLASS:11)
Block(-1,10,-2,STAINED_GLASS:11)
Block(-4,10,-1,STAINED_GLASS:3)
Block(-3,10,-1,STAINED_GLASS:11)
Block(-2,10,-1,STAINED_GLASS:11)
Block(-3,10,0,STAINED_GLASS:11)
Block(-4,11,-6,STAINED_GLASS:15)
Block(-3,11,-6,STAINED_GLASS:3)
Block(-5,11,-5,STAINED_GLASS:15)
Block(-4,11,-5,STAINED_GLASS:15)
Block(-3,11,-5,STAINED_GLASS:3)
Block(-2,11,-5,STAINED_GLASS:3)
Block(-6,11,-4,STAINED_GLASS:15)
Block(-5,11,-4,STAINED_GLASS:11)
Block(-4,11,-4,SEA_LANTERN:0)
Block(-3,11,-4,SEA_LANTERN:0)
Block(-2,11,-4,STAINED_GLASS:3)
Block(-1,11,-4,STAINED_GLASS:3)
Block(-6,11,-3,STAINED_GLASS:11)
Block(-5,11,-3,STAINED_GLASS:11)
Block(-4,11,-3,SEA_LANTERN:0)
Block(-3,11,-3,SEA_LANTERN:0)
Block(-2,11,-3,STAINED_GLASS:15)
Block(-1,11,-3,STAINED_GLASS:15)
Block(-5,11,-2,STAINED_GLASS:11)
Block(-4,11,-2,STAINED_GLASS:11)
Block(-3,11,-2,STAINED_GLASS:11)
Block(-2,11,-2,STAINED_GLASS:11)
Block(-4,11,-1,STAINED_GLASS:3)
Block(-3,11,-1,STAINED_GLASS:11)
Block(-4,12,-7,STAINED_GLASS:15)
Block(-5,12,-6,STAINED_GLASS:15)
Block(-4,12,-6,STAINED_GLASS:15)
Block(-3,12,-6,STAINED_GLASS:3)
Block(-6,12,-5,STAINED_GLASS:15)
Block(-5,12,-5,STAINED_GLASS:15)
Block(-4,12,-5,SEA_LANTERN:0)
Block(-3,12,-5,STAINED_GLASS:3)
Block(-2,12,-5,STAINED_GLASS:3)
Block(-7,12,-4,STAINED_GLASS:15)
Block(-6,12,-4,STAINED_GLASS:11)
Block(-5,12,-4,SEA_LANTERN:0)
Block(-4,12,-4,SEA_LANTERN:0)
Block(-3,12,-4,SEA_LANTERN:0)
Block(-2,12,-4,STAINED_GLASS:3)
Block(-1,12,-4,STAINED_GLASS:3)
Block(-6,12,-3,STAINED_GLASS:11)
Block(-5,12,-3,STAINED_GLASS:11)
Block(-4,12,-3,SEA_LANTERN:0)
Block(-3,12,-3,STAINED_GLASS:11)
Block(-2,12,-3,STAINED_GLASS:11)
Block(-5,12,-2,STAINED_GLASS:15)
Block(-4,12,-2,STAINED_GLASS:11)
Block(-3,12,-2,STAINED_GLASS:11)
Block(-4,12,-1,STAINED_GLASS:11)
Block(-5,13,-7,STAINED_GLASS:15)
Block(-4,13,-7,STAINED_GLASS:15)
Block(-6,13,-6,STAINED_GLASS:15)
Block(-5,13,-6,STAINED_GLASS:15)
Block(-4,13,-6,STAINED_GLASS:15)
Block(-3,13,-6,STAINED_GLASS:15)
Block(-7,13,-5,STAINED_GLASS:15)
Block(-6,13,-5,STAINED_GLASS:15)
Block(-5,13,-5,SEA_LANTERN:0)
Block(-4,13,-5,SEA_LANTERN:0)
Block(-3,13,-5,STAINED_GLASS:3)
Block(-2,13,-5,STAINED_GLASS:3)
Block(-7,13,-4,STAINED_GLASS:11)
Block(-6,13,-4,STAINED_GLASS:11)
Block(-5,13,-4,SEA_LANTERN:0)
Block(-4,13,-4,SEA_LANTERN:0)
Block(-3,13,-4,STAINED_GLASS:11)
Block(-2,13,-4,STAINED_GLASS:11)
Block(-6,13,-3,STAINED_GLASS:11)
Block(-5,13,-3,STAINED_GLASS:11)
Block(-4,13,-3,STAINED_GLASS:11)
Block(-3,13,-3,STAINED_GLASS:11)
Block(-5,13,-2,STAINED_GLASS:11)
Block(-4,13,-2,STAINED_GLASS:11)
Block(-5,14,-7,STAINED_GLASS:15)
Block(-4,14,-7,STAINED_GLASS:15)
Block(-6,14,-6,STAINED_GLASS:15)
Block(-5,14,-6,SEA_LANTERN:0)
Block(-4,14,-6,STAINED_GLASS:15)
Block(-3,14,-6,STAINED_GLASS:3)
Block(-7,14,-5,STAINED_GLASS:15)
Block(-6,14,-5,SEA_LANTERN:0)
Block(-5,14,-5,SEA_LANTERN:0)
Block(-4,14,-5,SEA_LANTERN:0)
Block(-3,14,-5,STAINED_GLASS:3)
Block(-2,14,-5,STAINED_GLASS:3)
Block(-7,14,-4,STAINED_GLASS:15)
Block(-6,14,-4,STAINED_GLASS:11)
Block(-5,14,-4,SEA_LANTERN:0)
Block(-4,14,-4,STAINED_GLASS:15)
Block(-3,14,-4,STAINED_GLASS:11)
Block(-6,14,-3,STAINED_GLASS:11)
Block(-5,14,-3,STAINED_GLASS:11)
Block(-4,14,-3,STAINED_GLASS:11)
Block(-5,14,-2,STAINED_GLASS:3)
Block(-6,15,-7,STAINED_GLASS:15)
Block(-5,15,-7,STAINED_GLASS:15)
Block(-4,15,-7,STAINED_GLASS:15)
Block(-7,15,-6,STAINED_GLASS:15)
Block(-6,15,-6,SEA_LANTERN:0)
Block(-5,15,-6,SEA_LANTERN:0)
Block(-4,15,-6,STAINED_GLASS:11)
Block(-3,15,-6,STAINED_GLASS:3)
Block(-7,15,-5,STAINED_GLASS:15)
Block(-6,15,-5,SEA_LANTERN:0)
Block(-5,15,-5,SEA_LANTERN:0)
Block(-4,15,-5,STAINED_GLASS:11)
Block(-3,15,-5,STAINED_GLASS:11)
Block(-7,15,-4,STAINED_GLASS:15)
Block(-6,15,-4,STAINED_GLASS:3)
Block(-5,15,-4,STAINED_GLASS:3)
Block(-4,15,-4,STAINED_GLASS:11)
Block(-6,15,-3,STAINED_GLASS:3)
Block(-5,15,-3,STAINED_GLASS:3)
Block(-6,16,-7,STAINED_GLASS:15)
Block(-5,16,-7,STAINED_GLASS:3)
Block(-7,16,-6,STAINED_GLASS:3)
Block(-6,16,-6,SEA_LANTERN:0)
Block(-5,16,-6,STAINED_GLASS:11)
Block(-4,16,-6,STAINED_GLASS:11)
Block(-7,16,-5,STAINED_GLASS:3)
Block(-6,16,-5,STAINED_GLASS:15)
Block(-5,16,-5,STAINED_GLASS:11)
Block(-4,16,-5,STAINED_GLASS:11)
Block(-6,16,-4,STAINED_GLASS:15)
Block(-5,16,-4,STAINED_GLASS:11)
Block(-6,17,-7,STAINED_GLASS:3)
Block(-7,17,-6,STAINED_GLASS:3)
Block(-6,17,-6,STAINED_GLASS:3)
Block(-5,17,-6,STAINED_GLASS:3)
Block(-6,17,-5,STAINED_GLASS:3)
Block(-5,17,-5,STAINED_GLASS:11)
Block(-6,18,-6,STAINED_GLASS:3)

#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 checks                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Require a condition at a certain location in order for the BO3 to be spawned.
# BlockCheck(x,y,z,BlockName[,BlockName[,...]]) - one of the blocks must be at the location
# BlockCheckNot(x,y,z,BlockName[,BlockName[,...]]) - all the blocks must not be at the location
# LightCheck(x,y,z,minLightLevel,maxLightLevel) - light must be between min and max (inclusive)

# You can use "Solid" as a BlockName for matching all solid blocks or "All" to match all blocks that aren't air.

# Examples:
#   BlockCheck(0,-1,0,GRASS,DIRT)  Require grass or dirt just below the object
#   BlockCheck(0,-1,0,Solid)       Require any solid block just below the object
#   BlockCheck(0,-1,0,WOOL)        Require any type of wool just below the object
#   BlockCheck(0,-1,0,WOOL:0)      Require white wool just below the object
#   BlockCheckNot(0,-1,0,WOOL:0)   Require that there is no white wool below the object
#   LightCheck(0,0,0,0,1)          Require almost complete darkness just below the object

#######################################################################
# +-----------------------------------------------------------------+ #
# |                             Branches                            | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Branches are objects that will spawn when this object spawns when it is used in
# the CustomStructure resource. Branches can also have branches, making complex
# structures possible. See the wiki for more details.

# Regular Branches spawn each branch with an independent chance of spawning.
# Branch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][IndividualChance])
# branchName - name of the object to spawn.
# rotation - NORTH, SOUTH, EAST or WEST.
# IndividualChance - The chance each branch has to spawn, assumed to be 100 when left blank

# Weighted Branches spawn branches with a dependent chance of spawning.
# WeightedBranch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][MaxChanceOutOf])
# MaxChanceOutOf - The chance all branches have to spawn out of, assumed to be 100 when left blank
