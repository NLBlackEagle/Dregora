#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 object                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This is the config file of a custom object.
# If you add this object correctly to your BiomeConfigs, it will spawn in the world.

# This is the creator of this BO3 object
Author: BO3 BulkEdit (by LanToaster)

# A short description of this BO3 object
Description: This Object was Created with BO3_BulkEdit

# The BO3 version, don't change this! It can be used by external applications to do a version check.
Version: 3

# The settings mode, WriteAll, WriteWithoutComments or WriteDisable. See WorldConfig.
SettingsMode: WriteDisable


#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Main settings                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This needs to be set to true to spawn the object in the Tree and Sapling resources.
Tree: false

# The frequency of the BO3 from 1 to 200. Tries this many times to spawn this BO3 when using the CustomObject(...) resource.

Frequency: 5

# The rarity of the BO3 from 0 to 100. Each spawn attempt has rarity% chance to succeed when using the CustomObject(...) resource.

Rarity: 100

# If you set this to true, the BO3 will be placed with a random rotation.
RotateRandomly: true

# The spawn height of the BO3 - randomY, highestBlock or highestSolidBlock.
SpawnHeight: randomY

# The height limits for the BO3.
MinHeight: 10

MaxHeight: 180

# Objects can have other objects attacthed to it: branches. Branches can also
# have branches attached to it, which can also have branches, etc. This is the
# maximum branch depth for this objects.
MaxBranchDepth: 10

# When spawned with the UseWorld keyword, this BO3 should NOT spawn in the following biomes.
# If you writer.write the BO3 name directly in the BiomeConfigs, this will be ignored.
ExcludedBiomes: All


#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Source block settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The block(s) the BO3 should spawn in.
SourceBlocks: AIR

# The maximum percentage of the BO3 that can be outside the SourceBlock.
# The BO3 won't be placed on a location with more blocks outside the SourceBlock than this percentage.
MaxPercentageOutsideSourceBlock: 100

# What to do when a block is about to be placed outside the SourceBlock? (dontPlace, placeAnyway)
OutsideSourceBlock: placeAnyway


#######################################################################
# +-----------------------------------------------------------------+ #
# |                              Blocks                             | #
# +-----------------------------------------------------------------+ #
#######################################################################

# All the blocks used in the BO3 are listed here. Possible blocks:
# Block(x,y,z,id[.data][,nbtfile.nbt)
# RandomBlock(x,y,z,id[:data][,nbtfile.nbt],chance[,id[:data][,nbtfile.nbt],chance[,...]])
# So RandomBlock(0,0,0,CHEST,chest.nbt,50,CHEST,anotherchest.nbt,100) will spawn a chest at
# the BO3 origin, and give it a 50% chance to have the contents of chest.nbt, or, if that
# fails, a 100% percent chance to have the contents of anotherchest.nbt.
Block(0,0,0,STONE:0)
Block(0,1,0,STONE:0)
Block(0,2,0,STONE:0)
Block(4,3,-2,STONE:0)
Block(-2,3,-1,STONE:0)
Block(0,3,0,STONE:0)
Block(0,3,1,STONE:0)
Block(-1,4,-3,STONE:0)
Block(4,4,-2,STONE:0)
Block(-2,4,-1,STONE:0)
Block(2,4,-1,STONE:0)
Block(-2,4,0,STONE:0)
Block(0,4,0,STONE:0)
Block(1,4,0,STONE:0)
Block(0,4,1,STONE:0)
Block(-3,4,2,STONE:0)
Block(3,4,2,STONE:0)
Block(0,4,3,STONE:0)
Block(-1,5,-3,STONE:0)
Block(0,5,-3,STONE:0)
Block(1,5,-3,STONE:0)
Block(3,5,-3,STONE:0)
Block(1,5,-2,STONE:0)
Block(2,5,-2,STONE:0)
Block(4,5,-2,STONE:0)
Block(5,5,-2,STONE:0)
Block(-3,5,-1,STONE:0)
Block(-2,5,-1,STONE:0)
Block(-1,5,-1,STONE:0)
Block(0,5,-1,STONE:0)
Block(2,5,-1,STONE:0)
Block(3,5,-1,STONE:0)
Block(-3,5,0,STONE:0)
Block(-2,5,0,STONE:0)
Block(0,5,0,STONE:0)
Block(1,5,0,STONE:0)
Block(-2,5,1,STONE:0)
Block(0,5,1,STONE:0)
Block(1,5,1,STONE:0)
Block(2,5,1,STONE:0)
Block(3,5,1,STONE:0)
Block(-3,5,2,STONE:0)
Block(-2,5,2,STONE:0)
Block(-1,5,2,STONE:0)
Block(0,5,2,STONE:0)
Block(2,5,2,STONE:0)
Block(3,5,2,STONE:0)
Block(0,5,3,STONE:0)
Block(1,5,3,STONE:0)
Block(3,5,3,STONE:0)
Block(0,5,4,STONE:0)
Block(2,6,-5,STONE:0)
Block(-1,6,-4,STONE:0)
Block(0,6,-4,STONE:0)
Block(1,6,-4,STONE:0)
Block(2,6,-4,STONE:0)
Block(3,6,-4,STONE:0)
Block(4,6,-4,STONE:0)
Block(-3,6,-3,STONE:0)
Block(-2,6,-3,STONE:0)
Block(-1,6,-3,STONE:0)
Block(0,6,-3,STONE:0)
Block(1,6,-3,STONE:0)
Block(2,6,-3,STONE:0)
Block(3,6,-3,STONE:0)
Block(4,6,-3,STONE:0)
Block(-3,6,-2,STONE:0)
Block(-2,6,-2,STONE:0)
Block(-1,6,-2,STONE:0)
Block(0,6,-2,STONE:0)
Block(1,6,-2,STONE:0)
Block(2,6,-2,STONE:0)
Block(3,6,-2,STONE:0)
Block(4,6,-2,STONE:0)
Block(5,6,-2,STONE:0)
Block(-4,6,-1,STONE:0)
Block(-3,6,-1,STONE:0)
Block(-2,6,-1,STONE:0)
Block(-1,6,-1,STONE:0)
Block(0,6,-1,STONE:0)
Block(1,6,-1,STONE:0)
Block(2,6,-1,STONE:0)
Block(3,6,-1,STONE:0)
Block(4,6,-1,STONE:0)
Block(-4,6,0,STONE:0)
Block(-3,6,0,STONE:0)
Block(-2,6,0,STONE:0)
Block(-1,6,0,STONE:0)
Block(0,6,0,STONE:0)
Block(1,6,0,STONE:0)
Block(2,6,0,STONE:0)
Block(3,6,0,STONE:0)
Block(4,6,0,STONE:0)
Block(-3,6,1,STONE:0)
Block(-2,6,1,STONE:0)
Block(-1,6,1,STONE:0)
Block(0,6,1,STONE:0)
Block(1,6,1,STONE:0)
Block(2,6,1,STONE:0)
Block(3,6,1,STONE:0)
Block(-3,6,2,STONE:0)
Block(-2,6,2,STONE:0)
Block(-1,6,2,STONE:0)
Block(0,6,2,STONE:0)
Block(1,6,2,STONE:0)
Block(2,6,2,STONE:0)
Block(3,6,2,STONE:0)
Block(4,6,2,STONE:0)
Block(-3,6,3,STONE:0)
Block(-2,6,3,STONE:0)
Block(-1,6,3,STONE:0)
Block(0,6,3,STONE:0)
Block(1,6,3,STONE:0)
Block(2,6,3,STONE:0)
Block(3,6,3,STONE:0)
Block(-1,6,4,STONE:0)
Block(0,6,4,STONE:0)
Block(1,6,4,STONE:0)
Block(2,7,-6,STONE:0)
Block(3,7,-6,STONE:0)
Block(-2,7,-5,STONE:0)
Block(-1,7,-5,STONE:0)
Block(0,7,-5,STONE:0)
Block(1,7,-5,STONE:0)
Block(2,7,-5,STONE:0)
Block(3,7,-5,STONE:0)
Block(4,7,-5,STONE:0)
Block(-4,7,-4,STONE:0)
Block(-3,7,-4,STONE:0)
Block(-2,7,-4,STONE:0)
Block(-1,7,-4,STONE:0)
Block(0,7,-4,STONE:0)
Block(1,7,-4,STONE:0)
Block(2,7,-4,STONE:0)
Block(3,7,-4,STONE:0)
Block(4,7,-4,STONE:0)
Block(5,7,-4,STONE:0)
Block(6,7,-4,STONE:0)
Block(-5,7,-3,STONE:0)
Block(-4,7,-3,STONE:0)
Block(-3,7,-3,STONE:0)
Block(-2,7,-3,STONE:0)
Block(-1,7,-3,STONE:0)
Block(0,7,-3,STONE:0)
Block(1,7,-3,STONE:0)
Block(2,7,-3,STONE:0)
Block(3,7,-3,STONE:0)
Block(4,7,-3,STONE:0)
Block(5,7,-3,STONE:0)
Block(6,7,-3,STONE:0)
Block(-5,7,-2,STONE:0)
Block(-4,7,-2,STONE:0)
Block(-3,7,-2,STONE:0)
Block(-2,7,-2,STONE:0)
Block(-1,7,-2,STONE:0)
Block(0,7,-2,STONE:0)
Block(1,7,-2,STONE:0)
Block(2,7,-2,STONE:0)
Block(3,7,-2,STONE:0)
Block(4,7,-2,STONE:0)
Block(5,7,-2,STONE:0)
Block(-6,7,-1,STONE:0)
Block(-5,7,-1,STONE:0)
Block(-4,7,-1,STONE:0)
Block(-3,7,-1,STONE:0)
Block(-2,7,-1,STONE:0)
Block(-1,7,-1,STONE:0)
Block(0,7,-1,STONE:0)
Block(1,7,-1,STONE:0)
Block(2,7,-1,STONE:0)
Block(3,7,-1,STONE:0)
Block(4,7,-1,STONE:0)
Block(5,7,-1,STONE:0)
Block(-5,7,0,STONE:0)
Block(-4,7,0,STONE:0)
Block(-3,7,0,STONE:0)
Block(-2,7,0,STONE:0)
Block(-1,7,0,STONE:0)
Block(0,7,0,STONE:0)
Block(1,7,0,STONE:0)
Block(2,7,0,STONE:0)
Block(3,7,0,STONE:0)
Block(4,7,0,STONE:0)
Block(-4,7,1,STONE:0)
Block(-3,7,1,STONE:0)
Block(-2,7,1,STONE:0)
Block(-1,7,1,STONE:0)
Block(0,7,1,STONE:0)
Block(1,7,1,STONE:0)
Block(2,7,1,STONE:0)
Block(3,7,1,STONE:0)
Block(4,7,1,STONE:0)
Block(-4,7,2,STONE:0)
Block(-3,7,2,STONE:0)
Block(-2,7,2,STONE:0)
Block(-1,7,2,STONE:0)
Block(0,7,2,STONE:0)
Block(1,7,2,STONE:0)
Block(2,7,2,STONE:0)
Block(3,7,2,STONE:0)
Block(4,7,2,STONE:0)
Block(5,7,2,STONE:0)
Block(-4,7,3,STONE:0)
Block(-3,7,3,STONE:0)
Block(-2,7,3,STONE:0)
Block(-1,7,3,STONE:0)
Block(0,7,3,STONE:0)
Block(1,7,3,STONE:0)
Block(2,7,3,STONE:0)
Block(3,7,3,STONE:0)
Block(4,7,3,STONE:0)
Block(5,7,3,STONE:0)
Block(-4,7,4,STONE:0)
Block(-3,7,4,STONE:0)
Block(-2,7,4,STONE:0)
Block(-1,7,4,STONE:0)
Block(0,7,4,STONE:0)
Block(1,7,4,STONE:0)
Block(2,7,4,STONE:0)
Block(3,7,4,STONE:0)
Block(4,7,4,STONE:0)
Block(-3,7,5,STONE:0)
Block(-2,7,5,STONE:0)
Block(-1,7,5,STONE:0)
Block(0,7,5,STONE:0)
Block(1,7,5,STONE:0)
Block(2,7,5,STONE:0)
Block(4,7,5,STONE:0)

#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 checks                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Require a condition at a certain location in order for the BO3 to be spawned.
# BlockCheck(x,y,z,BlockName[,BlockName[,...]]) - one of the blocks must be at the location
# BlockCheckNot(x,y,z,BlockName[,BlockName[,...]]) - all the blocks must not be at the location
# LightCheck(x,y,z,minLightLevel,maxLightLevel) - light must be between min and max (inclusive)

# You can use "Solid" as a BlockName for matching all solid blocks or "All" to match all blocks that aren't air.

# Examples:
#   BlockCheck(0,-1,0,GRASS,DIRT)  Require grass or dirt just below the object
#   BlockCheck(0,-1,0,Solid)       Require any solid block just below the object
#   BlockCheck(0,-1,0,WOOL)        Require any type of wool just below the object
#   BlockCheck(0,-1,0,WOOL:0)      Require white wool just below the object
#   BlockCheckNot(0,-1,0,WOOL:0)   Require that there is no white wool below the object
#   LightCheck(0,0,0,0,1)          Require almost complete darkness just below the object

#######################################################################
# +-----------------------------------------------------------------+ #
# |                             Branches                            | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Branches are objects that will spawn when this object spawns when it is used in
# the CustomStructure resource. Branches can also have branches, making complex
# structures possible. See the wiki for more details.

# Regular Branches spawn each branch with an independent chance of spawning.
# Branch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][IndividualChance])
# branchName - name of the object to spawn.
# rotation - NORTH, SOUTH, EAST or WEST.
# IndividualChance - The chance each branch has to spawn, assumed to be 100 when left blank

# Weighted Branches spawn branches with a dependent chance of spawning.
# WeightedBranch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][MaxChanceOutOf])
# MaxChanceOutOf - The chance all branches have to spawn out of, assumed to be 100 when left blank
BlockCheck(3,8,-6,Solid)
BlockCheck(-2,8,-5,Solid)
BlockCheck(6,8,-3,Solid)
BlockCheck(-6,8,-1,Solid)
BlockCheck(5,8,2,Solid)
BlockCheck(-4,8,4,Solid)
BlockCheck(2,8,5,Solid)

BlockCheck(0,4,0,AIR)